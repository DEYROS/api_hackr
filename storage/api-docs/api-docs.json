{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation hackr",
        "description": "API for 'hacking' ! Thx Kevin Niel for this awesome Idea.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated user",
                "operationId": "b9abb1a7a74670a19c215c2c133f14d8",
                "responses": {
                    "200": {
                        "description": "Authenticated user details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the authenticated user",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the authentication token",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "responses": {
                    "200": {
                        "description": "Token refreshed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/{user}/functionalities": {
            "post": {
                "tags": [
                    "Functionality"
                ],
                "summary": "Add functionality to a user",
                "operationId": "a9fbdc5b10fb356655eee7cf0f750a15",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The ID of the user to add functionality to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "functionality": {
                                        "description": "The name of the functionality to add",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Functionality added successfully"
                    },
                    "400": {
                        "description": "Validation error or functionality not found"
                    }
                }
            }
        },
        "/api/users/{user}/functionalities/{functionality}": {
            "delete": {
                "tags": [
                    "Functionality"
                ],
                "summary": "Remove functionality from a user",
                "operationId": "ee49a44629ccf8c43a6a7453a332fd9d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The ID of the user to remove functionality from",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "functionality",
                        "in": "path",
                        "description": "The name of the functionality to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Functionality removed successfully"
                    },
                    "400": {
                        "description": "Validation error or functionality not associated with the user"
                    }
                }
            }
        },
        "/api/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get all logs",
                "operationId": "f6af6e6d1c3976704d6cdeb29a6f4921",
                "responses": {
                    "200": {
                        "description": "Logs retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs for a specific user",
                "operationId": "6a99ce197cb6c0a5b022e9fae0ffb204",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID to filter logs",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logs retrieved successfully"
                    },
                    "400": {
                        "description": "User ID is required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/functionalities/{functionality}/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs for a specific functionality, optionally filtered by user",
                "operationId": "ccd2fe1fb1146e73026949e27ed5d9ca",
                "parameters": [
                    {
                        "name": "functionality",
                        "in": "path",
                        "description": "Functionality ID to filter logs",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User ID to further filter logs",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Functionality logs retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/check": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Check if a password is in the list of most common passwords",
                "operationId": "efa5ff4e3dfab9934694a22ef3879db3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "The password to check",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password is secure"
                    },
                    "400": {
                        "description": "Password is too common"
                    },
                    "403": {
                        "description": "User does not have the necessary functionality"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/generate": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Generate a secure password",
                "operationId": "5dc8837f9c03705eef9181411ece457e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "length": {
                                        "description": "Length of the password to generate",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generated password"
                    },
                    "403": {
                        "description": "User does not have the necessary functionality"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "4db02f0d9ccd97469981e0cb03d1a41e",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Functionality",
            "description": "Functionality"
        },
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "Password",
            "description": "Password"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}